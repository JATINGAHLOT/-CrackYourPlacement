/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if (!head) {
            return nullptr;
        }
        
        ListNode* curr = head;
        ListNode* prev = nullptr;
        
        while (curr) {
            if (curr->next && curr->val == curr->next->val) {
                curr = curr->next;
            } else {
                if (prev) {
                    prev->next = curr;
                } else {
                    head = curr;
                }
                prev = curr;
                curr = curr->next;
            }
        }
        
        if (prev) {
            prev->next = nullptr;
        }
        
        return head; 
    }
};
